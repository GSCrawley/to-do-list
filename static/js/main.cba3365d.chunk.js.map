{"version":3,"sources":["actions/index.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","App.js","index.js","local_storage.js"],"names":["nextTodoId","VisibilityFilters","todos","state","action","type","id","text","completed","map","todo","index","payload","slice","item","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","ref","node","Todo","onDelete","textDecoration","TodoList","toggleTodo","deleteTodo","key","getVisibleTodos","t","Error","App","VisibleTodoList","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","subscribe","stringify","setItem","console","log","saveState","getState","render","document","getElementById"],"mappings":"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","file":"static/js/main.cba3365d.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\"\nexport const EDIT_TODO = \"EDIT_TODO\"\nexport const DELETE_TODO = \"DELETE_TODO\"\nexport const TOGGLE_TODO = \"TOGGLE_TODO\"\n\nlet nextTodoId = 0\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  id: nextTodoId++,\n  text\n})\n\nexport const deleteTodo = (index) => {\n  return {\n    type: DELETE_TODO,\n    payload: { index }\n  }\n}\n\nexport const editTodo = (index, name) => {\n  return {\n    type: EDIT_TODO,\n    payload: { index, name }\n  }\n}\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id \n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { ADD_TODO, DELETE_TODO, EDIT_TODO, TOGGLE_TODO } from '../actions'\n\nconst todos = (state = [], action) => {\n    switch (action.type) {\n      case ADD_TODO:\n        return [\n          ...state, \n          {\n            id: action.id,\n            text: action.text,\n            completed: false\n            \n          }\n        ]\n      \n      case TOGGLE_TODO:\n        return state.map(todo =>\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n        ) \n        \n      case DELETE_TODO:\n        const { index } = action.payload\n        return [...state.slice(0, index), ...state.slice(index + 1)]\n      \n      case EDIT_TODO:\n        return state.map((item, index) => {\n          if (index !== action.payload.index) {\n            return item\n          }\n          return { ...item, ...action.payload }\n        })\n\n      default:\n        return state\n      \n    }\n  }\n  export default todos\n  ","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      marginLeft: '4px'\n    }}\n  >\n    {children}\n  </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link)","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nconst AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input ref={node => (input = node)} />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onDelete, onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n    <button onClick={onDelete}>x</button>\n  </li>\n)\n\n\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\nimport { deleteTodo } from '../actions'\n\nexport const TodoList = ({ todos, toggleTodo, deleteTodo }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo \n        key={todo.id} {...todo} \n        onClick={() => toggleTodo(todo.id)} \n          onDelete={() => deleteTodo(todo.id)}\n        />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id)),\n  deleteTodo: id => dispatch(deleteTodo(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import React from 'react'\nimport Footer from '../src/components/Footer'\nimport AddTodo from '../src/containers/AddTodo'\nimport VisibleTodoList from '../src/containers/VisibleTodoList'\n\n\nconst App = () => (\n \n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n)\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport App from './App'\nimport {loadState, saveState } from './local_storage';\n\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState);\nstore.subscribe(() => {\n  saveState(store.getState());\n})\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n","const TODO_STATE = \"TODO_STATE\"\n\n// Load State\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(TODO_STATE)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch(err) {\n    return undefined\n  }\n}\n\n// Save State\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(TODO_STATE, serializedState)\n  } catch(err) {\n    console.log(\"Error saving data:\"+err)\n  }\n}"],"sourceRoot":""}